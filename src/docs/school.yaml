# [GET] Get All Schools
/school:
  get:
    tags:
      - School
    summary: Get all schools
    description: Retrieves all schools
    responses:
      200:
        description: 'Schools retrieved successfully'
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: 'Schools retrieved successfully'
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/school'
      500:
        description: 'Internal server error'
    security:
      - bearerAuth: []
  post:
    tags:
      - School
    summary: Create a new school
    description: Creates a new school (staff only)
    requestBody:
      description: School information
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createSchool'
    responses:
      201:
        description: 'School created successfully'
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: 'School created successfully'
                data:
                  $ref: '#/components/schemas/school'
      400:
        description: 'Bad Request - Invalid input parameters'
      401:
        description: 'Unauthorized - Authentication required'
      403:
        description: 'Forbidden - Staff access required'
      500:
        description: 'Internal server error'
    security:
      - bearerAuth: []

# [GET] Get School by ID
/school/{id}:
  get:
    tags:
      - School
    summary: Get school by ID
    description: Retrieves a school by its ID
    parameters:
      - name: id
        in: path
        description: School ID
        required: true
        schema:
          type: string
          format: uuid
    responses:
      200:
        description: 'School retrieved successfully'
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: 'School retrieved successfully'
                data:
                  $ref: '#/components/schemas/school'
      404:
        description: 'School not found'
      500:
        description: 'Internal server error'
    security:
      - bearerAuth: []
  put:
    tags:
      - School
    summary: Update school
    description: Updates a school by its ID (staff only)
    parameters:
      - name: id
        in: path
        description: School ID
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      description: School information to update
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateSchool'
    responses:
      200:
        description: 'School updated successfully'
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: 'School updated successfully'
                data:
                  $ref: '#/components/schemas/school'
      400:
        description: 'Bad Request - Invalid input parameters'
      401:
        description: 'Unauthorized - Authentication required'
      403:
        description: 'Forbidden - Staff access required'
      404:
        description: 'School not found'
      500:
        description: 'Internal server error'
    security:
      - bearerAuth: []
  delete:
    tags:
      - School
    summary: Delete school
    description: Deletes a school by its ID (admin only)
    parameters:
      - name: id
        in: path
        description: School ID
        required: true
        schema:
          type: string
          format: uuid
    responses:
      200:
        description: 'School deleted successfully'
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: 'School deleted successfully'
      401:
        description: 'Unauthorized - Authentication required'
      403:
        description: 'Forbidden - Admin access required'
      404:
        description: 'School not found'
      500:
        description: 'Internal server error'
    security:
      - bearerAuth: []

# [GET] Get Kid Schools
/school/kid/{kidId}:
  get:
    tags:
      - School
      - Kid-School
    summary: Get schools for a kid
    description: Retrieves all schools associated with a kid
    parameters:
      - name: kidId
        in: path
        description: Kid ID
        required: true
        schema:
          type: string
          format: uuid
    responses:
      200:
        description: 'Kid schools retrieved successfully'
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: 'Kid schools retrieved successfully'
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/school'
      404:
        description: 'Kid not found'
      500:
        description: 'Internal server error'
    security:
      - bearerAuth: []

# [POST] Add Kid to School
/school/kid/{kidId}/school/{schoolId}:
  post:
    tags:
      - School
      - Kid-School
    summary: Add kid to school
    description: Associates a kid with a school
    parameters:
      - name: kidId
        in: path
        description: Kid ID
        required: true
        schema:
          type: string
          format: uuid
      - name: schoolId
        in: path
        description: School ID
        required: true
        schema:
          type: string
          format: uuid
    responses:
      201:
        description: 'Kid added to school successfully'
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: 'Kid added to school successfully'
                data:
                  $ref: '#/components/schemas/kidSchool'
      400:
        description: 'Bad Request - Kid already associated with this school'
      404:
        description: 'Kid or school not found'
      500:
        description: 'Internal server error'
    security:
      - bearerAuth: []
  delete:
    tags:
      - School
      - Kid-School
    summary: Remove kid from school
    description: Removes a kid from a school
    parameters:
      - name: kidId
        in: path
        description: Kid ID
        required: true
        schema:
          type: string
          format: uuid
      - name: schoolId
        in: path
        description: School ID
        required: true
        schema:
          type: string
          format: uuid
    responses:
      200:
        description: 'Kid removed from school successfully'
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: 'Kid removed from school successfully'
      404:
        description: 'Kid or school not found or association does not exist'
      500:
        description: 'Internal server error'
    security:
      - bearerAuth: []